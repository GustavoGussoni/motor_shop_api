// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Announcement {
  id            String         @id @default(uuid())
  name_car      String         @db.VarChar(20)
  brand         String         @db.VarChar(20)
  year          String         @db.VarChar(4)
  fuel          Int            @db.Integer()
  kilometers    Int            @db.Integer()
  color         String         @db.VarChar(20)
  price_fipe    Int            @db.Integer()
  price         Int            @db.Integer()
  description   String         @db.Text()
  cover_image   String         @db.Text()
  is_activate   Boolean        @default(false) @db.Boolean()
  image_gallery ImageGallery[]

  user   User   @relation(fields: [userId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  userId String

  @@map("announcements")
}

model ImageGallery {
  id    String @id @default(uuid())
  image String @db.Text()

  Announcement   Announcement @relation(fields: [announcementId], references: [id])
  announcementId String

  @@map("images_gallery")
}

model User {
  id            String   @id @default(uuid())
  name          String   @db.VarChar(150)
  email         String   @unique @db.VarChar(254)
  cpf           String   @db.VarChar(12)
  cellphone     String   @db.VarChar(11)
  birthdate     DateTime @db.Date()
  description   String   @db.VarChar()
  is_admin      Boolean  @default(false) @db.Boolean()
  is_advertiser Boolean  @default(false) @db.Boolean()
  password      String   @db.VarChar(128)

  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  addressId String  @unique

  announcement Announcement[]

  @@map("users")
}

model Address {
  id     String  @id @default(uuid())
  cep    String  @db.VarChar(10)
  state  String  @db.VarChar(2)
  city   String  @db.VarChar(50)
  street String  @db.VarChar(255)
  number Int     @db.Integer()
  addOn  String? @db.VarChar(10)

  user User?

  @@map("addresses")
}
